/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AllGui;

import AllClasses.*;
import AllGui.Admin_Update_Memeber;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

import javax.swing.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Admin_Search_Memeber extends javax.swing.JFrame {

    public String username2;
    
    public Admin_Search_Memeber() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MemberDelete = new javax.swing.JButton();
        MemberUpdate = new javax.swing.JButton();
        MakeReport = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        meber_id = new javax.swing.JTextField();
        Back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MemberDelete.setText("Delete");
        MemberDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberDeleteActionPerformed(evt);
            }
        });

        MemberUpdate.setText("Update");
        MemberUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberUpdateActionPerformed(evt);
            }
        });

        MakeReport.setText("Make Report");
        MakeReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MakeReportActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Age", "Coach Assigned", "Subscription Ends On"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Enter The Member's ID");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        meber_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meber_idActionPerformed(evt);
            }
        });
        meber_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                meber_idKeyTyped(evt);
            }
        });

        Back.setText("Go Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Search Members");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(MakeReport)
                        .addGap(116, 116, 116)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(51, 51, 51)
                        .addComponent(meber_id, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MemberDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(221, 221, 221))
                            .addComponent(MemberUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(meber_id, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MemberUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MemberDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MakeReport, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MemberDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberDeleteActionPerformed
        // TODO add your handling code here:

        if(meber_id.getText().isEmpty()){
            Masseges.showErrorDialog(AllClasses.Masseges.errorEmptyField);
        }else{
            try{
                Dlete del = new Dlete();
                del.delete(Integer.parseInt(meber_id.getText()),"MEMBER");
                Masseges.showInformationDialog("Deleted Successfully");
            }catch (SQLException ex) {
                Logger.getLogger(Admin_List_Coach.class.getName()).log(Level.SEVERE, null, ex);
                Masseges.showErrorDialog(AllClasses.Masseges.errorUpdatingDatabase);
            }
        }
    }//GEN-LAST:event_MemberDeleteActionPerformed

    private void MemberUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberUpdateActionPerformed
        // TODO add your handling code here:
        Admin_Update_Memeber updateMember = new Admin_Update_Memeber(Integer.parseInt(meber_id.getText()));
        CenterFrame.setCenterScreen(this,updateMember);
    }//GEN-LAST:event_MemberUpdateActionPerformed

    private void MakeReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MakeReportActionPerformed
        try {
            
            Admin_Member_Reports makeReport = new Admin_Member_Reports(username2);
            CenterFrame.setCenterScreen(this,makeReport);
        } catch (SQLException ex) {
            Logger.getLogger(Admin_Search_Memeber.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MakeReportActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if(meber_id.getText().isEmpty()){
            Masseges.showErrorDialog(Masseges.errorEmptyField);
        }else{
            try{
                SearchMember search = new SearchMember();
                ArrayList<String> member = search.searchMember(Integer.parseInt(meber_id.getText()));
                if(member.isEmpty()){
                    Masseges.showErrorDialog("User Doesn't Exist");
                }else{
                    int memberCounter = 0;
                    String[] columnsName = {"ID", "Name","Age","Assigned Coach","Subscription Ends"};

                    String[][] data = new String [(member.size())/5][5];
                    for (int i = 0 ; i<data.length ; i++){
                        for(int j=0 ; j<5 ; j++){
                            data[i][j] = member.get(memberCounter);
                            memberCounter++;
                        }
                    }
                    username2=member.get(1);

                    DefaultTableModel model = new DefaultTableModel(data, columnsName);
                    table.setModel(model);
                    table.setDefaultEditor(Object.class, null);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Admin_List_Coach.class.getName()).log(Level.SEVERE, null, ex);
                Masseges.showErrorDialog(AllClasses.Masseges.errorUpdatingDatabase);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void meber_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meber_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_meber_idActionPerformed

    private void meber_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_meber_idKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c))){
            evt.consume();
        }
    }//GEN-LAST:event_meber_idKeyTyped

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        Admin adminPage = new Admin();
        CenterFrame.setCenterScreen(this,adminPage);
    }//GEN-LAST:event_BackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_Search_Memeber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_Search_Memeber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_Search_Memeber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_Search_Memeber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_Search_Memeber().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton MakeReport;
    private javax.swing.JButton MemberDelete;
    private javax.swing.JButton MemberUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField meber_id;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
